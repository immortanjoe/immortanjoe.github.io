<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on 方舟的博客</title>
    <link>https://fangzhou.blog/categories/C&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on 方舟的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 04 Mar 2023 20:32:14 +0800</lastBuildDate>
    <atom:link href="https://fangzhou.blog/categories/C++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43; map容器中无法找到存在的元素</title>
      <link>https://fangzhou.blog/post/element-in-map-but-find-fails-cpp/</link>
      <pubDate>Sat, 04 Mar 2023 20:32:14 +0800</pubDate>
      <guid>https://fangzhou.blog/post/element-in-map-but-find-fails-cpp/</guid>
      <description>如果说一个元素存在于map中，但是find函数却找不到，你信吗？也就是下面的表达式成立： testMap.find(testMap.begin()-&amp;gt;first) == testMap.end() 问题现象 在SRS的gb28181分支中，有如下代码： while (true) { ... if(jitter_buffer-&amp;gt;FoundFrame(cur_timestamp)){ jitter_buffer-&amp;gt;GetFrame(&amp;amp;ps_buffer, ps_buflen, buffer_size, keyframe, cur_timestamp) } ... } jitter_buffer中存在用于存储frame信息的map容器，用frameMap代指。 class SrsRtpJitterBuffer { ... private: std::map&amp;lt;uint32_t, SrsRtpFrameBuffer*, TimestampLessThan&amp;gt;</description>
    </item>
    <item>
      <title>C&#43;&#43;父类vptr偏移地址计算错误导致的crash</title>
      <link>https://fangzhou.blog/post/crash-caused-by-incorrect-offset-of-parent-class-pointer/</link>
      <pubDate>Thu, 29 Sep 2022 22:51:27 +0800</pubDate>
      <guid>https://fangzhou.blog/post/crash-caused-by-incorrect-offset-of-parent-class-pointer/</guid>
      <description>问题现象 对某一个SrsServer类添加一个public ClassA继承后，程序再次运行就会crash。（关键代码已经做混淆处理） class SrsServer : virtual public ISrsReloadHandler, virtual public ISrsSourceHandler, virtual public ISrsResourceManager, virtual public ISrsProcessSampleObjectoroutineHandler, virtual public ISrsHourGlass, public ClassA { public: SrsServer() {} virtual ~SrsServer(){} }; class ClassA : public class BaseClassA { ... } class BaseClassA { ... public: void print(); ... } 问题分析 错乱的父类函数调用 通过gdb调试coredump文件</description>
    </item>
  </channel>
</rss>
